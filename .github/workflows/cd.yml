name: CD - Release and Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.0.0'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    
    - name: Run tests
      run: |
        python test_installation.py
        python review_architecture.py sample_architecture.md
    
    - name: Build package
      run: |
        python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: package-artifacts
        path: dist/

  create-release-assets:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create release bundle
      run: |
        mkdir -p release-bundle
        cp -r *.py standards/ custom_standards/ examples/ release-bundle/
        cp requirements.txt README.md release-bundle/
        tar -czf architecture-review-agent-${{ github.event.release.tag_name || github.event.inputs.version }}.tar.gz release-bundle/
        zip -r architecture-review-agent-${{ github.event.release.tag_name || github.event.inputs.version }}.zip release-bundle/
    
    - name: Generate release notes
      run: |
        python architecture_review_agent.py sample_architecture.md --output release-demo.html --format html
    
    - name: Upload release assets
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./architecture-review-agent-${{ github.event.release.tag_name }}.tar.gz
        asset_name: architecture-review-agent-${{ github.event.release.tag_name }}.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload ZIP release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./architecture-review-agent-${{ github.event.release.tag_name }}.zip
        asset_name: architecture-review-agent-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
    
    - name: Upload demo report
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-demo.html
        asset_name: demo-report.html
        asset_content_type: text/html

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.11-slim
        
        WORKDIR /app
        
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        
        COPY . .
        
        ENTRYPOINT ["python", "architecture_review_agent.py"]
        CMD ["--help"]
        EOF
    
    - name: Build Docker image
      run: |
        docker build -t architecture-review-agent:${{ github.event.release.tag_name }} .
        docker save architecture-review-agent:${{ github.event.release.tag_name }} > architecture-review-agent-docker.tar
    
    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: architecture-review-agent-docker.tar
